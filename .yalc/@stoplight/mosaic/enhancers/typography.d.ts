import type { TFontFamily, TFontSize, TFontStyle, TFontWeight, TLetterSpacing, TLineHeight, TTextAlign, TTextDecoration, TTextOverflow, TTextTransform, TVerticalAlign, TWhitespace, TWordBreak } from '../types/tailwind';
import type { ChopPrefix } from '../types/twind';
import { WithPseudo } from './pseudo';
import type { EnhancerFn } from './types';
export declare type FontSizeVals = ChopPrefix<'text', TFontSize>;
export declare type LineHeights = ChopPrefix<'leading', TLineHeight>;
export declare type LetterSpacing = ChopPrefix<'tracking', TLetterSpacing>;
export declare type FontFamilyVals = ChopPrefix<'font', TFontFamily>;
export declare type FontWeightVals = ChopPrefix<'font', TFontWeight>;
export declare type FontStyleVals = TFontStyle;
export declare type TextAlign = ChopPrefix<'text', TTextAlign>;
export declare type TextDecoration = TTextDecoration;
export declare type TextTransform = TTextTransform;
export declare type TextOverflow = TTextOverflow;
export declare type VerticalAlign = ChopPrefix<'align', TVerticalAlign>;
export declare type Whitespace = ChopPrefix<'whitespace', TWhitespace>;
export declare type WordBreak = ChopPrefix<'break', TWordBreak>;
export declare type ITypographyProps = WithPseudo<{
    fontSize?: FontSizeVals;
    lineHeight?: LineHeights;
    letterSpacing?: LetterSpacing;
    fontFamily?: FontFamilyVals;
    fontWeight?: FontWeightVals;
    fontStyle?: FontStyleVals;
    textAlign?: TextAlign;
    textDecoration?: TextDecoration;
    textTransform?: TextTransform;
    textOverflow?: TextOverflow;
    verticalAlign?: VerticalAlign;
    whitespace?: Whitespace;
    wordBreak?: WordBreak;
}>;
export declare const typographyPropNames: Array<keyof ITypographyProps>;
export declare const typographyProps: EnhancerFn<ITypographyProps>;
